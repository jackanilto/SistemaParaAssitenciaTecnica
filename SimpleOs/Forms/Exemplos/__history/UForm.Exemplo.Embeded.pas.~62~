unit UForm.Exemplo.Embeded;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants,
  System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, Vcl.Imaging.pngimage, Vcl.ExtCtrls,
  Vcl.Buttons, Vcl.StdCtrls, Vcl.WinXPanels, Data.DB, Vcl.Grids, Vcl.DBGrids,
  Vcl.Menus;

type
  TformExemploEmbeded = class(TForm)
    Panel1: TPanel;
    sbFechar: TSpeedButton;
    lblCaption: TLabel;
    Panel2: TPanel;
    lblCadastro: TLabel;
    lblConsulta: TLabel;
    pnlFocoCadastro: TPanel;
    pnlFocoConsulta: TPanel;
    Panel3: TPanel;
    sbNovo: TSpeedButton;
    sbSalvar: TSpeedButton;
    sbEditar: TSpeedButton;
    sbExcluir: TSpeedButton;
    sbCancelar: TSpeedButton;
    cbPesquisar: TComboBox;
    edtPesquisar: TEdit;
    Label4: TLabel;
    Label5: TLabel;
    CardPanel1: TCardPanel;
    cardPanelCadatro: TCard;
    cardPanelConsulta: TCard;
    Panel4: TPanel;
    DBGrid1: TDBGrid;
    sbImprimir: TSpeedButton;
    sbExportar: TSpeedButton;
    PopupMenu1: TPopupMenu;
    Editar1: TMenuItem;
    Excluir1: TMenuItem;
    procedure sbFecharClick(Sender: TObject);
    procedure FormCreate(Sender: TObject);
    procedure Panel1MouseDown(Sender: TObject; Button: TMouseButton;
      Shift: TShiftState; X, Y: Integer);
    procedure FormShow(Sender: TObject);
    procedure lblCadastroMouseMove(Sender: TObject; Shift: TShiftState;
      X, Y: Integer);
    procedure lblConsultaMouseMove(Sender: TObject; Shift: TShiftState;
      X, Y: Integer);
    procedure sbNovoClick(Sender: TObject);
    procedure sbSalvarClick(Sender: TObject);
    procedure sbEditarClick(Sender: TObject);
    procedure sbExcluirClick(Sender: TObject);
    procedure sbCancelarClick(Sender: TObject);
    procedure lblCadastroClick(Sender: TObject);
    procedure lblConsultaClick(Sender: TObject);
    procedure FormKeyDown(Sender: TObject; var Key: Word; Shift: TShiftState);
    procedure Editar1Click(Sender: TObject);
    procedure Excluir1Click(Sender: TObject);
  private
    { Private declarations }
    procedure ativarDesativarNovo;
    procedure ativarDesativarSalvar;
    procedure ativarDesativarEditar;
    procedure ativarDesativarExcluir;
    procedure ativarDesativarCancelar;
    procedure ativarDesativarPesquisar;
    function isCPF(cpf: string): boolean;
  public
    { Public declarations }
  end;

var
  formExemploEmbeded: TformExemploEmbeded;

implementation

{$R *.dfm}

procedure TformExemploEmbeded.ativarDesativarCancelar;
begin
  sbNovo.Enabled := true;
  sbSalvar.Enabled := false;
  sbEditar.Enabled := false;
  sbExcluir.Enabled := false;
  sbCancelar.Enabled := false;
end;

procedure TformExemploEmbeded.ativarDesativarEditar;
begin
  sbNovo.Enabled := false;
  sbSalvar.Enabled := true;
  sbEditar.Enabled := false;
  sbExcluir.Enabled := true;
  sbCancelar.Enabled := true;
end;

procedure TformExemploEmbeded.ativarDesativarExcluir;
begin
  sbNovo.Enabled := true;
  sbSalvar.Enabled := false;
  sbEditar.Enabled := false;
  sbExcluir.Enabled := false;
  sbCancelar.Enabled := false;
end;

procedure TformExemploEmbeded.ativarDesativarNovo;
begin
  sbNovo.Enabled := false;
  sbSalvar.Enabled := true;
  sbEditar.Enabled := false;
  sbExcluir.Enabled := false;
  sbCancelar.Enabled := true;
end;

procedure TformExemploEmbeded.ativarDesativarPesquisar;
begin
  sbNovo.Enabled := true;
  sbSalvar.Enabled := false;
  sbEditar.Enabled := true;
  sbExcluir.Enabled := true;
  sbCancelar.Enabled := true;
end;

procedure TformExemploEmbeded.ativarDesativarSalvar;
begin
  sbNovo.Enabled := true;
  sbSalvar.Enabled := false;
  sbEditar.Enabled := true;
  sbExcluir.Enabled := true;
  sbCancelar.Enabled := false;
end;

procedure TformExemploEmbeded.Editar1Click(Sender: TObject);
begin
  if sbEditar.Enabled = true then
    sbEditar.Click;
end;

procedure TformExemploEmbeded.Excluir1Click(Sender: TObject);
begin
  if sbExcluir.Enabled = true then
    sbExcluir.Click;
end;

procedure TformExemploEmbeded.FormCreate(Sender: TObject);
begin
  ReportMemoryLeaksOnShutdown := true;
end;

procedure TformExemploEmbeded.FormKeyDown(Sender: TObject; var Key: Word;
  Shift: TShiftState);
begin
  if Key = 113 then
  begin
    if sbNovo.Enabled = true then
      sbNovo.Click;
  end;

  if Key = 114 then
  begin
    if sbSalvar.Enabled = true then
      sbSalvar.Click;
  end;

  if Key = 115 then
  begin
    if sbEditar.Enabled = true then
      sbEditar.Click;
  end;

  if Key = 116 then
  begin
    if sbExcluir.Enabled = true then
      sbExcluir.Click;
  end;

  if Key = 117 then
  begin
    if sbCancelar.Enabled = true then
      sbCancelar.Click;
  end;
end;

procedure TformExemploEmbeded.FormShow(Sender: TObject);
begin

  pnlFocoCadastro.Visible := false;
  CardPanel1.ActiveCard := cardPanelConsulta;

  sbNovo.Enabled := true;
  sbSalvar.Enabled := false;
  sbEditar.Enabled := false;
  sbExcluir.Enabled := false;
  sbCancelar.Enabled := false;

end;

function TformExemploEmbeded.isCPF(cpf: string): boolean;
var
  dig10, dig11: string;
  s, i, r, peso: Integer;
begin
  if ((cpf = '00000000000') or (cpf = '11111111111') or (cpf = '22222222222') or
    (cpf = '33333333333') or (cpf = '44444444444') or (cpf = '55555555555') or
    (cpf = '66666666666') or (cpf = '77777777777') or (cpf = '88888888888') or
    (cpf = '99999999999') or (length(cpf) <> 11)) then
  begin
    isCPF := false;
    exit;
  end;
  try
    { *-- cáculo do 10. Digito--* }
    s := 0;
    peso := 10;
    for i := 1 to 9 do
    begin
      s := s + (strtoint(cpf[i]) * peso);
      peso := peso - 1;
    end;
    r := 11 - (s mod 11);
    if ((r = 10) or (r = 11)) then
      dig10 := '0'
    else
      str(r: 1, dig10); // conversao em caractere númericos

    { *--cácula o segundo digito--* }
    s := 0;
    peso := 11;
    for i := 1 to 10 do
    begin
      s := s + (strtoint(cpf[i]) * peso);
      peso := peso - 1;
    end;
    r := 11 - (s mod 11);
    if ((r = 10) or (r = 11)) then
      dig11 := '0'
    else
      str(r: 1, dig11);

    { verifica se os digigitos informados conferem com o resultado }

    if ((dig10 = cpf[10]) and (dig11 = cpf[11])) then
      isCPF := true
    else
      isCPF := false
  except
    isCPF := false;
  end;
end;

procedure TformExemploEmbeded.lblCadastroClick(Sender: TObject);
begin
  CardPanel1.ActiveCard := cardPanelCadatro;
  lblCaption.Caption := self.Caption + ' > Cadastro';
end;

procedure TformExemploEmbeded.lblCadastroMouseMove(Sender: TObject;
  Shift: TShiftState; X, Y: Integer);
begin
  pnlFocoCadastro.Visible := true;
  pnlFocoConsulta.Visible := false;
end;

procedure TformExemploEmbeded.lblConsultaClick(Sender: TObject);
begin
  CardPanel1.ActiveCard := cardPanelConsulta;
  lblCaption.Caption := self.Caption + ' > Consulta';
end;

procedure TformExemploEmbeded.lblConsultaMouseMove(Sender: TObject;
  Shift: TShiftState; X, Y: Integer);
begin
  pnlFocoCadastro.Visible := false;
  pnlFocoConsulta.Visible := true;
end;

procedure TformExemploEmbeded.Panel1MouseDown(Sender: TObject;
  Button: TMouseButton; Shift: TShiftState; X, Y: Integer);
const
  SC_DRAGMOVE = $F012;
begin
  if Button = mbleft then
  begin
    ReleaseCapture;
    self.Perform(WM_SYSCOMMAND, SC_DRAGMOVE, 0);
  end;
end;

procedure TformExemploEmbeded.sbCancelarClick(Sender: TObject);
begin
  CardPanel1.ActiveCard := cardPanelConsulta;
  pnlFocoCadastro.Visible := true;
  pnlFocoConsulta.Visible := true;
  lblCaption.Caption := self.Caption + '';
  lblCadastro.Enabled := true;
  lblConsulta.Enabled := true;
  ativarDesativarCancelar;
end;

procedure TformExemploEmbeded.sbEditarClick(Sender: TObject);
begin
  CardPanel1.ActiveCard := cardPanelCadatro;
  pnlFocoCadastro.Visible := true;
  pnlFocoConsulta.Visible := false;
  lblCadastro.Enabled := true;
  lblConsulta.Enabled := false;
  lblCaption.Caption := self.Caption + ' > Editando o registro selecionado';
  ativarDesativarEditar;
end;

procedure TformExemploEmbeded.sbExcluirClick(Sender: TObject);
begin
  CardPanel1.ActiveCard := cardPanelConsulta;
  pnlFocoCadastro.Visible := false;
  pnlFocoConsulta.Visible := true;
  lblCadastro.Enabled := true;
  lblConsulta.Enabled := true;
  lblCaption.Caption := self.Caption + ' > Registro excluído com sucesso';
  ativarDesativarExcluir;
end;

procedure TformExemploEmbeded.sbFecharClick(Sender: TObject);
begin
  close;
end;

procedure TformExemploEmbeded.sbNovoClick(Sender: TObject);
begin
  CardPanel1.ActiveCard := cardPanelCadatro;
  pnlFocoCadastro.Visible := true;
  pnlFocoConsulta.Visible := false;
  lblCaption.Caption := self.Caption + ' > Inserindo um novo registro';
  lblCadastro.Enabled := true;
  lblConsulta.Enabled := false;
  ativarDesativarNovo;
end;

procedure TformExemploEmbeded.sbSalvarClick(Sender: TObject);
begin
  CardPanel1.ActiveCard := cardPanelConsulta;
  pnlFocoCadastro.Visible := false;
  pnlFocoConsulta.Visible := true;
  lblCaption.Caption := self.Caption + '';
  lblCadastro.Enabled := true;
  lblConsulta.Enabled := true;
  showmessage('Operação realizada com sucesso!');
  ativarDesativarSalvar;
end;

end.
