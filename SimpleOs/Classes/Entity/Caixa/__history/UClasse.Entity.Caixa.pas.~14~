unit UClasse.Entity.Caixa;

interface

uses
  FireDAC.Comp.Client, UDados.Conexao, System.SysUtils;

type
  TEntityCaixa = class

    private

    FQuery:TFDQuery;

    var
      FUltimaData:TDate;

    public

    function verificarSituacaoCaixa:string;

    constructor create;
    destructor destroy; override;

  end;

implementation

{ TEntityCaixa }

constructor TEntityCaixa.create;
begin

  FQuery := TFDQuery.Create(nil);
  FQuery.Connection := DataModule1.Conexao;
  FQuery.Active := false;
  FQuery.SQL.Clear;
  FQuery.SQL.Add('select * from CAIXA_ABER_FECH order by id desc');
  FQuery.Active := true;

end;

destructor TEntityCaixa.destroy;
begin

  freeandnil(FQuery);

  inherited;
end;

function TEntityCaixa.verificarSituacaoCaixa: string;
begin

 if FQuery.RecordCount = 0 then
 begin
   result := 'fechado';
 end
 else if ((FQuery.FieldByName('DATA_ABERTURA').AsDateTime = date) and
  (FQuery.FieldByName('STATUS').AsDateTime = 'aberto'))  then
  begin
    Result := 'aberto';
  end
  else if ((FQuery.FieldByName('DATA_ABERTURA').AsDateTime <> date) and
  (FQuery.FieldByName('STATUS').AsDateTime = 'aberto'))  then
  begin
    Result := 'nao foi encerrado';
  end
  else if ((FQuery.FieldByName('DATA_ENCERRAMENTO').AsDateTime = date) and
  (FQuery.FieldByName('STATUS').AsDateTime = 'fechado'))  then
  begin
    Result := 'fechado';
  end
    else if ((FQuery.FieldByName('DATA_ENCERRAMENTO').AsDateTime <> date) and
  (FQuery.FieldByName('STATUS').AsDateTime = 'fechado'))  then
  begin
    Result := 'fechado';
  end


end;

end.
