unit UClasse.Relatorio.Logs.Eventos;

interface

uses UClasse.Query, UInterfaces, UDados.Conexao, Data.DB, Vcl.Dialogs,
  System.SysUtils, Vcl.Forms, Winapi.Windows, Vcl.Controls,
  UClasse.Gravar.Log.Sistema, Vcl.ComCtrls, Vcl.DBGrids, Vcl.Mask,
  System.Win.ComObj;

type

  TRelatorioLogEventos = class(TInterfacedObject, iRelatorioLogEventos)
  private

    FQuery: iConexaoQuery;
    FGravarLog: iGravarLogOperacoes;
    FTabela: string;
    FCampo: string;
    FValor: string;
    FDataInicial: TDate;
    FDataFinal: TDate;

    FCodigo: integer;
    FNome: string;

  public

    function nomeTabela(value: string): iRelatorioLogEventos;
    function getCampo(value: string): iRelatorioLogEventos;
    function getValor(value: string): iRelatorioLogEventos;
    function getDataInicial(value: TDate): iRelatorioLogEventos;
    function getDataFinal(value: TDate): iRelatorioLogEventos;
    function open(value: string): iRelatorioLogEventos;
    function pesquisar: iRelatorioLogEventos;
    function ExecSql: iRelatorioLogEventos;
    function sqlPesquisa: iRelatorioLogEventos;
    function sqlPesquisaData: iRelatorioLogEventos;
    function sqlPesquisaEstatica: iRelatorioLogEventos;

    function abrir: iRelatorioLogEventos;
    function atualizar: iRelatorioLogEventos;
    function cancelar: iRelatorioLogEventos;
    function fecharQuery: iRelatorioLogEventos;
    function listarGrid(value: TDataSource): iRelatorioLogEventos;
    function ordenarGrid(column: TColumn): iRelatorioLogEventos;

    function exportar: iRelatorioLogEventos;
    function validarData(componet: tmaskEdit):iRelatorioLogEventos;

    constructor create;
    destructor destroy; override;
    class function new: iRelatorioLogEventos;
  end;

implementation

{ TRelatorioLogEventos }

function TRelatorioLogEventos.abrir: iRelatorioLogEventos;
begin

  result := self;
  FQuery.Query(FTabela);

end;

function TRelatorioLogEventos.atualizar: iRelatorioLogEventos;
begin
  result := self;
  FQuery.TQuery.Refresh;
end;

function TRelatorioLogEventos.cancelar: iRelatorioLogEventos;
begin
  FQuery.TQuery.Cancel;
  // FQuery.TQuery.close;
end;

constructor TRelatorioLogEventos.create;
begin
  FTabela := 'LOG_EVENTOS';
  FQuery := TConexaoQuery.new.Query(FTabela);

  FGravarLog := TGravarLogSistema.new;
  FGravarLog.getJanela('Relatório Log de Eventos').getCodigoFuncionario
    (funcionarioLogado);
  // (0 { definir o usuário quando construir a aplicação } );

end;

destructor TRelatorioLogEventos.destroy;
begin

  inherited;
end;

function TRelatorioLogEventos.ExecSql: iRelatorioLogEventos;
begin
  result := self;
  FQuery.ExecSql(FTabela);
end;

function TRelatorioLogEventos.exportar: iRelatorioLogEventos;
var
  pasta: variant;
  linha: integer;
begin

  FQuery.TQuery.Filtered := false;
  FQuery.TQuery.First;

  linha := 2;
  pasta := CreateOleObject('Excel.application');
  pasta.workBooks.Add(1);

  pasta.Caption := 'Log de Eventos';
  pasta.visible := true;

  pasta.cells[1, 1] := 'OS';
  pasta.cells[1, 2] := 'Cód. Cliente';
  pasta.cells[1, 3] := 'Cliente';
  pasta.cells[1, 4] := 'Equipamento';
  pasta.cells[1, 5] := 'Defeito relatado';
  pasta.cells[1, 6] := 'Marcas';
  pasta.cells[1, 7] := 'Modelo';
  pasta.cells[1, 8] := 'Número de serie';
  pasta.cells[1, 9] := 'Data de fabricação';
  pasta.cells[1, 10] := 'Laudo técnico';
  pasta.cells[1, 11] := 'Solução do problema';
  pasta.cells[1, 12] := 'Valor da OS';
  pasta.cells[1, 13] := 'Desconto';
  pasta.cells[1, 14] := 'Acréscimo';
  pasta.cells[1, 15] := 'Total da OS';
  pasta.cells[1, 16] := 'Retorno';
  pasta.cells[1, 17] := 'Data de retorno';
  pasta.cells[1, 18] := 'Situação da ordem';
  pasta.cells[1, 19] := 'Total de parcelas';
  pasta.cells[1, 20] := 'Valor da parcela';
  pasta.cells[1, 21] := 'PGTO';
  pasta.cells[1, 22] := 'Prioridade';
  pasta.cells[1, 23] := 'Data de entrada';
  pasta.cells[1, 24] := 'Data de saida';
  pasta.cells[1, 25] := 'Hora da saída';
  pasta.cells[1, 26] := 'Vencimento base';
  pasta.cells[1, 27] := 'Cód. Técnico responsável';
  pasta.cells[1, 28] := 'Técnico responsável';
  pasta.cells[1, 29] := 'Observação';
  pasta.cells[1, 30] := 'Status';

  try
    while not FQuery.TQuery.Eof do
    begin

      pasta.cells[linha, 1] := FQuery.TQuery.FieldByName('ID_ORDEM').AsInteger;
      pasta.cells[linha, 2] := FQuery.TQuery.FieldByName('ID_CLIENTE').AsString;
      pasta.cells[linha, 3] := FQuery.TQuery.FieldByName('NOME_CLIENTE').AsString;
      pasta.cells[linha, 4] := FQuery.TQuery.FieldByName('EQUIPAMENTO').AsString;
      pasta.cells[linha, 5] := FQuery.TQuery.FieldByName('DEFEITO_RELATADO').AsString;
      pasta.cells[linha, 6] := FQuery.TQuery.FieldByName('MARCAS').AsString;
      pasta.cells[linha, 7] := FQuery.TQuery.FieldByName('MODELO').AsString;
      pasta.cells[linha, 8] := FQuery.TQuery.FieldByName('NUMERO_SERIE').AsString;
      pasta.cells[linha, 9] := FQuery.TQuery.FieldByName('DATA_FABRICACAO').AsDateTime;
      pasta.cells[linha, 10] := FQuery.TQuery.FieldByName('LAUDO_DO_TECNICO').AsString;
      pasta.cells[linha, 11] := FQuery.TQuery.FieldByName('SOLUCAO_DO_PROBLEMA').AsString;
      pasta.cells[linha, 12] := FQuery.TQuery.FieldByName('VALOR_DA_ORDEM').AsCurrency;
      pasta.cells[linha, 13] := FQuery.TQuery.FieldByName('DESCONTO').AsCurrency;
      pasta.cells[linha, 14] := FQuery.TQuery.FieldByName('ACRESCIMO').AsCurrency;
      pasta.cells[linha, 15] := FQuery.TQuery.FieldByName('TOTAL_ORCAMENTO').AsCurrency;
      pasta.cells[linha, 16] := FQuery.TQuery.FieldByName('RETORNO').AsString;
      pasta.cells[linha, 17] := FQuery.TQuery.FieldByName('DATA_RETORNO').AsDateTime;
      pasta.cells[linha, 18] := FQuery.TQuery.FieldByName('SITUACAO_DA_ORDEM').AsString;
      pasta.cells[linha, 19] := FQuery.TQuery.FieldByName('TOTAL_PARCELAS').AsInteger;
      pasta.cells[linha, 20] := FQuery.TQuery.FieldByName('VALOR_DA_PARCELA').AsCurrency;
      pasta.cells[linha, 21] := FQuery.TQuery.FieldByName('PGTO').AsString;
      pasta.cells[linha, 22] := FQuery.TQuery.FieldByName('PRIORIDADE').AsString;
      pasta.cells[linha, 23] := FQuery.TQuery.FieldByName('DATA_ENTRADA').AsDateTime;
      pasta.cells[linha, 24] := FQuery.TQuery.FieldByName('DATA_FINALIZACAO').AsDateTime;
      pasta.cells[linha, 25] := FQuery.TQuery.FieldByName('HORA_SAIDA').AsDateTime;
      pasta.cells[linha, 26] := FQuery.TQuery.FieldByName('DATA_BASE_VENCIMENTO').AsDateTime;
      pasta.cells[linha, 27] := FQuery.TQuery.FieldByName('ID_TECNICO_RESPONSAVEL').AsInteger;
      pasta.cells[linha, 28] := FQuery.TQuery.FieldByName('TECNICO_RESPONSAVEL').AsString;
      pasta.cells[linha, 29] := FQuery.TQuery.FieldByName('OBSERVACAO').AsString;
      pasta.cells[linha, 30] := FQuery.TQuery.FieldByName('STATUS').AsString;

      linha := linha + 1;

      FQuery.TQuery.Next;

    end;
    pasta.columns.autofit;
  finally
  end;
end;

function TRelatorioLogEventos.fecharQuery: iRelatorioLogEventos;
begin
  FQuery.TQuery.close;
end;

function TRelatorioLogEventos.getCampo(value: string): iRelatorioLogEventos;
begin
  result := self;
  FCampo := value;
end;

function TRelatorioLogEventos.getDataFinal(value: TDate): iRelatorioLogEventos;
begin
  result := self;
  FDataFinal := value;
end;

function TRelatorioLogEventos.getDataInicial(value: TDate): iRelatorioLogEventos;
begin
  result := self;
  FDataInicial := value;
end;

function TRelatorioLogEventos.getValor(value: string): iRelatorioLogEventos;
begin
  result := self;
  FValor := UpperCase(value);
end;

function TRelatorioLogEventos.listarGrid(value: TDataSource): iRelatorioLogEventos;
begin

  result := self;

  with FQuery.TQuery do
  begin

    FieldByName('ID').Visible := false;
    FieldByName('DATA').DisplayLabel := 'Data';
    FieldByName('HORA').DisplayLabel := 'Horario';
    FieldByName('ID_FUNCIONARIO').DisplayLabel := 'Cód. Funcionário';
    FieldByName('NOME_FUNCIONARIO').DisplayLabel := 'Nome do funcionário';
    FieldByName('REGISTRO').DisplayLabel := 'Registro';
    FieldByName('OPERACAO').DisplayLabel := 'Operação';

    FieldByName('NOME_FUNCIONARIO').DisplayWidth := 40;
    FieldByName('REGISTRO').DisplayWidth := 40;
    FieldByName('OPERACAO').DisplayWidth := 40;

  end;

  value.DataSet := FQuery.TQuery;

end;

class function TRelatorioLogEventos.new: iRelatorioLogEventos;
begin
  result := self.create;
end;

function TRelatorioLogEventos.nomeTabela(value: string): iRelatorioLogEventos;
begin
  result := self;
  FTabela := value;
end;

function TRelatorioLogEventos.open(value: string): iRelatorioLogEventos;
begin
  FQuery.Query(FTabela);
end;

function TRelatorioLogEventos.ordenarGrid(column: TColumn): iRelatorioLogEventos;
begin

  if FQuery.TQuery.IndexFieldNames = column.FieldName then
    FQuery.TQuery.IndexFieldNames := column.FieldName + ':D'
  else
    FQuery.TQuery.IndexFieldNames := column.FieldName;

end;

function TRelatorioLogEventos.pesquisar: iRelatorioLogEventos;
begin
  result := self;
end;

function TRelatorioLogEventos.sqlPesquisa: iRelatorioLogEventos;
begin
  result := self;
  FQuery.getCampo(FCampo).getValor(FValor).sqlPesquisa(FTabela);
end;

function TRelatorioLogEventos.sqlPesquisaData: iRelatorioLogEventos;
begin
  result := self;
  FQuery.getCampo(FCampo).getValor(FValor).getDataInicial(FDataInicial)
    .getDataFinal(FDataFinal).sqlPesquisaData(FTabela);
end;

function TRelatorioLogEventos.sqlPesquisaEstatica: iRelatorioLogEventos;
begin
  result := self;
  FQuery.getCampo(FCampo).getValor(FValor).getDataInicial(FDataInicial)
    .getDataFinal(FDataFinal).sqlPesquisaEstatica(FTabela);
end;

function TRelatorioLogEventos.validarData(componet: tmaskEdit):iRelatorioLogEventos;
var
  d: TDate;
begin

  result := self;

  try
    d := strtodate(componet.Text);
  except
    componet.SetFocus;
    componet.Clear;
    raise exception.create('Digite uma data válida.');
  end;
end;

end.
