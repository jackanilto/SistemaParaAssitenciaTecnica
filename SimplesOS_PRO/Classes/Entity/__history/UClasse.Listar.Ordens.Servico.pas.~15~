unit UClasse.Listar.Ordens.Servico;

interface

uses UClasse.Query, UInterfaces, UDados.Conexao, Data.DB, Vcl.Dialogs,
  System.SysUtils, Vcl.Forms, Winapi.Windows, Vcl.Controls,
  UClasse.Gravar.Log.Sistema, Vcl.ComCtrls, Vcl.DBGrids, Vcl.Mask;

type

  TEntityListarOrdensServico = class(TInterfacedObject, iListarOrdensServico)
  private

    FQuery: iConexaoQuery;
    FGravarLog: iGravarLogOperacoes;
    FTabela: string;
    FCampo: string;
    FValor: string;
    FDataInicial: TDate;
    FDataFinal: TDate;

    FCodigo: integer;
    FNome: string;

  public

    function nomeTabela(value: string): iListarOrdensServico;
    function getCampo(value: string): iListarOrdensServico;
    function getValor(value: string): iListarOrdensServico;
    function getDataInicial(value: TDate): iListarOrdensServico;
    function getDataFinal(value: TDate): iListarOrdensServico;
    function open(value: string): iListarOrdensServico;
    function pesquisar: iListarOrdensServico;
    function ExecSql: iListarOrdensServico;
    function sqlPesquisa: iListarOrdensServico;
    function sqlPesquisaData: iListarOrdensServico;
    function sqlPesquisaEstatica: iListarOrdensServico;

    function abrir: iListarOrdensServico;
    function fecharQuery: iListarOrdensServico;
    function listarGrid(value: TDataSource): iListarOrdensServico;
    function ordenarGrid(column: TColumn): iListarOrdensServico;
    function atualizar: iListarOrdensServico;

    function exportar: iListarOrdensServico;

    constructor create;
    destructor destroy; override;
    class function new: iListarOrdensServico;
  end;

implementation

uses
  System.Win.ComObj;

{ TEntityListarOrdensServico }

function TEntityListarOrdensServico.abrir: iListarOrdensServico;
begin

  result := self;
  FQuery.Query(FTabela);

end;

function TEntityListarOrdensServico.atualizar: iListarOrdensServico;
begin
  result := self;
  FQuery.TQuery.Refresh;
end;

constructor TEntityListarOrdensServico.create;
begin
  FTabela := 'VISUALIZAR_ORDENS_CLIENTES';
  FQuery := TConexaoQuery.new.Query(FTabela);

  FGravarLog := TGravarLogSistema.new;
  FGravarLog.getJanela('Lista de ordens').getCodigoFuncionario
    (funcionarioLogado);
  // (0 { definir o usuário quando construir a aplicação } );

end;

destructor TEntityListarOrdensServico.destroy;
begin

  inherited;
end;

function TEntityListarOrdensServico.ExecSql: iListarOrdensServico;
begin
  result := self;
  FQuery.ExecSql(FTabela);
end;

function TEntityListarOrdensServico.exportar: iListarOrdensServico;
var
  pasta: variant;
  linha: integer;
begin

  FQuery.TQuery.Filtered := false;

  linha := 2;
  pasta := CreateOleObject('Excel.application');
  pasta.workBooks.Add(1);

  pasta.Caption := 'Lista de O.S selecionadas';
  pasta.visible := true;

  pasta.cells[1, 1] := 'Código da O.S';
  pasta.cells[1, 2] := 'Código do cliente';
  pasta.cells[1, 3] := 'Nome do cliente';
  pasta.cells[1, 4] := 'CPF ou CNPJ';
  pasta.cells[1, 5] := 'Telefone';
  pasta.cells[1, 6] := 'Celular';
  pasta.cells[1, 7] := 'E-Mail';
  pasta.cells[1, 8] := 'Quantidade mínima';
  pasta.cells[1, 9] := 'Quantidade atual';
  pasta.cells[1, 10] := 'Data de validade';
  pasta.cells[1, 11] := 'Data de alteração';
  pasta.cells[1, 12] := 'Código grupo';
  pasta.cells[1, 13] := 'Grupo';
  pasta.cells[1, 14] := 'Código marca';
  pasta.cells[1, 15] := 'Marca';
  pasta.cells[1, 16] := 'Modelo';
  pasta.cells[1, 17]:= 'Número de serie';
  pasta.cells[1, 18]:= 'Data de fabricação';
  pasta.cells[1, 19]:= 'Funcionário';
  pasta.cells[1, 20]:= 'Obsercação';

  try
    while not FQuery.TQuery.Eof do
    begin

      pasta.cells[linha, 1] := FQuery.TQuery.FieldByName('ID').AsInteger;
      pasta.cells[linha, 2] := FQuery.TQuery.FieldByName
        ('PRODUTO').AsString;
      pasta.cells[linha, 3] := '"' + FQuery.TQuery.FieldByName('CODIGO_BARRAS')
        .AsString + '"';
      pasta.cells[linha, 4] := FQuery.TQuery.FieldByName('DESCRICAO').AsString;
      pasta.cells[linha, 5] := FQuery.TQuery.FieldByName('VALOR_CUSTO')
        .AsCurrency;
      pasta.cells[linha, 6] := FQuery.TQuery.FieldByName
        ('MARGEM_LUCRO').AsFloat;
      pasta.cells[linha, 7] := FQuery.TQuery.FieldByName('VALOR_VENDA')
        .AsCurrency;
      pasta.cells[linha, 8] := FQuery.TQuery.FieldByName('QUANTIDADE_MINIMA')
        .AsInteger;
      pasta.cells[linha, 9] := FQuery.TQuery.FieldByName('QUANTIDADE_ATUAL')
        .AsInteger;
      pasta.cells[linha, 10] := FQuery.TQuery.FieldByName('DATA_VALIDADE')
        .AsDateTime;
      pasta.cells[linha, 11] := FQuery.TQuery.FieldByName('DATA_ALTERACAO')
        .AsDateTime;
      pasta.cells[linha, 12] := FQuery.TQuery.FieldByName('ID_GRUPO').AsInteger;
      pasta.cells[linha, 13] := FQuery.TQuery.FieldByName('GRUPO').AsString;
      pasta.cells[linha, 14] := FQuery.TQuery.FieldByName('ID_MARCA').AsInteger;
      pasta.cells[linha, 15] := FQuery.TQuery.FieldByName('MARCA').AsString;
      pasta.cells[linha, 16] := '"' + FQuery.TQuery.FieldByName('MODELO')
        .AsString + '"';
      pasta.cells[linha, 17] := '"' + FQuery.TQuery.FieldByName('NUMERO_SERIE')
        .AsString + '"';
      pasta.cells[linha, 18] := FQuery.TQuery.FieldByName('DATA_FABRICACAO')
        .AsDateTime;
      pasta.cells[linha, 19] := FQuery.TQuery.FieldByName('FUNCIONARIO')
        .AsInteger;
      pasta.cells[linha, 20] := FQuery.TQuery.FieldByName('OBSERVACAO')
        .AsString;

      linha := linha + 1;

      FQuery.TQuery.Next;

    end;
    pasta.columns.autofit;
  finally
  end;
end;

function TEntityListarOrdensServico.fecharQuery: iListarOrdensServico;
begin
  FQuery.TQuery.close;
end;

function TEntityListarOrdensServico.getCampo(value: string)
  : iListarOrdensServico;
begin
  result := self;
  FCampo := value;
end;

function TEntityListarOrdensServico.getDataFinal(value: TDate)
  : iListarOrdensServico;
begin
  result := self;
  FDataFinal := value;
  // FQuery.getDataFinal(value);
end;

function TEntityListarOrdensServico.getDataInicial(value: TDate)
  : iListarOrdensServico;
begin
  result := self;
  FDataInicial := value;
  // FQuery.getDataInicial(value);
end;

function TEntityListarOrdensServico.getValor(value: string)
  : iListarOrdensServico;
begin
  result := self;
  FValor := UpperCase(value);
end;

function TEntityListarOrdensServico.listarGrid(value: TDataSource)
  : iListarOrdensServico;
begin

  result := self;
  with FQuery.TQuery do
  begin
    FieldByName('ID_ORDEM').DisplayLabel := 'Ordem';
    FieldByName('ID_CLIENTE').DisplayLabel := 'Cód. Cliente';
    FieldByName('NOME_CLIENTE').DisplayLabel := 'Nome do cliente';
    FieldByName('CPF_CNPJ').DisplayLabel := 'CPF ou CNPJ';
    FieldByName('TELEFONE').Visible := false;
    FieldByName('CELULAR').Visible := false;
    FieldByName('EMAIL').Visible := false;
    FieldByName('EQUIPAMENTO').DisplayLabel := 'Equipamento';
    FieldByName('DEFEITO_RELATADO').Visible := false;
    FieldByName('MARCAS').Visible := false;
    FieldByName('SITUACAO_DA_ORDEM').DisplayLabel := 'Situação da ordem';
    FieldByName('DATA_DE_ENTRADA').DisplayLabel := 'Entrada';
    FieldByName('DATA_SAIDA').DisplayLabel := 'Saida';
    FieldByName('PGTO').DisplayLabel := 'PGTO';

    FieldByName('ID_ORDEM').DisplayWidth := 15;
    FieldByName('NOME_CLIENTE').DisplayWidth := 30;
    FieldByName('EQUIPAMENTO').DisplayWidth := 25;
    FieldByName('SITUACAO_DA_ORDEM').DisplayWidth := 15;

  end;

  value.DataSet := FQuery.TQuery;

end;

class function TEntityListarOrdensServico.new: iListarOrdensServico;
begin
  result := self.create;
end;

function TEntityListarOrdensServico.nomeTabela(value: string)
  : iListarOrdensServico;
begin
  result := self;
  FTabela := value;
end;

function TEntityListarOrdensServico.open(value: string): iListarOrdensServico;
begin
  FQuery.Query(FTabela);
end;

function TEntityListarOrdensServico.ordenarGrid(column: TColumn)
  : iListarOrdensServico;
begin

  if FQuery.TQuery.IndexFieldNames = column.FieldName then
    FQuery.TQuery.IndexFieldNames := column.FieldName + ':D'
  else
    FQuery.TQuery.IndexFieldNames := column.FieldName;

end;

function TEntityListarOrdensServico.pesquisar: iListarOrdensServico;
begin
  result := self;
end;

function TEntityListarOrdensServico.sqlPesquisa: iListarOrdensServico;
begin
  result := self;
  FQuery.getCampo(FCampo).getValor(FValor).sqlPesquisa(FTabela);
end;

function TEntityListarOrdensServico.sqlPesquisaData: iListarOrdensServico;
begin
  result := self;
  FQuery.getCampo(FCampo).getValor(FValor).getDataInicial(FDataInicial)
    .getDataFinal(FDataFinal).sqlPesquisaData(FTabela);
end;

function TEntityListarOrdensServico.sqlPesquisaEstatica: iListarOrdensServico;
begin
  result := self;
  FQuery.getCampo(FCampo).getValor(FValor).getDataInicial(FDataInicial)
    .getDataFinal(FDataFinal).sqlPesquisaEstatica(FTabela);
end;

end.
